{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/all-contacts/all-contacts.component.ts","./src/app/all-contacts/all-contacts.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/model/Directory.ts","./src/app/model/DirectoryItem.ts","./src/app/new-contact/new-contact.component.ts","./src/app/new-contact/new-contact.component.html","./src/app/phone-directory/phone-directory.component.ts","./src/app/phone-directory/phone-directory.component.html","./src/app/services/contacts.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {ContactsService} from '../services/contacts.service';\n\n@Component({\n  selector: 'app-all-contacts',\n  templateUrl: './all-contacts.component.html',\n  styleUrls: ['./all-contacts.component.css']\n})\nexport class AllContactsComponent implements OnInit {\n\n  constructor(public contactsService: ContactsService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-contact *ngFor=\"let contact of this.contactsService.directory.contacts\" [contact]=\"contact\"></app-contact>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'imenik-angular';\n}\n","\n<!-- Toolbar -->\n<div class=\"toolbar\" role=\"banner\">\n  \n<span id=\"ico1\"></span>\n  <span id=\"nazivapp\">Phonebook-Imenik-Angular</span>\n    \n\n</div>\n<div id=\"app\">\n  <app-new-contact></app-new-contact>\n  <app-phone-directory></app-phone-directory>\n</div>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { NewContactComponent } from './new-contact/new-contact.component';\nimport { AllContactsComponent } from './all-contacts/all-contacts.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { PhoneDirectoryComponent } from './phone-directory/phone-directory.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NewContactComponent,\n    AllContactsComponent,\n    ContactComponent,\n    PhoneDirectoryComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit} from '@angular/core';\nimport DirectoryItem from '../model/DirectoryItem';\nimport {ContactsService} from '../services/contacts.service';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  @Input() contact: DirectoryItem;\n  constructor(public contactsService: ContactsService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"directory-contact\">\n  <div class=\"directory-contact-content\">\n    <span class=\"data\">{{ contact.name }}: {{ contact.phone }}</span>\n  </div>\n  <div class=\"directory-contact-date\">\n    <span class=\"month\">{{ contact.date.toLocaleString('default', { day: 'numeric'})}}.{{ contact.date.toLocaleString('default', { month: 'numeric'}) }}.{{ contact.date.toLocaleString('default', { year: 'numeric'})}}</span>\n  </div>\n  <span class=\"delete-btn\" title=\"Delete / ukloni\" (click)=\"this.contactsService.deleteContact(contact)\"></span>\n</div>\n","import DirectoryItem from \"./DirectoryItem\";\nclass Directory {\n\n  contacts: any;\n\n    constructor() {\n        this.contacts = this.loadFromLocalStorage();\n    }\n\n    add(contact) {\n        if(contact.name === \"\" || contact.phone === \"\"){\n            return\n        }\n        if(contact.phone.length >10){\n            return\n        }\n        this.contacts.push(contact);\n        this.saveToLocalStorage();\n    }\n\n    delete(contact) {\n        this.contacts.splice(this.contacts.indexOf(contact), 1);\n        this.saveToLocalStorage();\n    }\n\n    changeState() {\n        this.saveToLocalStorage();\n    }\n\n    saveToLocalStorage() {\n        localStorage.setItem('contact-data', JSON.stringify(this.contacts));\n    }\n\n    loadFromLocalStorage() {\n        const json = localStorage.getItem('contact-data');\n\n        if (json === null) {\n          return [];\n        }\n        const jsonParsed = JSON.parse(json, (key, value) => {\n            if (key === \"date\") {\n                value = new Date(value);\n            }\n            return value;\n        });\n\n        if (jsonParsed.length === 0)\n            return [];\n\n        const directoryItems = [];\n\n        for (let i = 0; i < jsonParsed.length; i++) {\n            directoryItems.push(DirectoryItem.fromJSON(jsonParsed[i]));\n        }\n\n        return directoryItems;\n    }\n\n}\nexport default Directory;\n","class DirectoryItem {\n\n  id: string;\n  name: string;\n  phone: string;\n  date: Date;\n\n  constructor(name, phone, date) {\n    this.id = Math.random().toString(36).substring(7);\n    this.name = name;\n    this.phone = phone;\n    this.date = date;\n  }\n\n  static fromJSON(json) {\n    let directoryItem = new DirectoryItem(json.name, json.phone, json.date);\n    directoryItem.id = json.id;\n    directoryItem.name = json.name;\n    directoryItem.phone = json.phone;\n    directoryItem.date = json.date;\n\n    return directoryItem;\n  }\n}\n\nexport default DirectoryItem;\n","import { Component, OnInit } from '@angular/core';\nimport {ContactsService} from '../services/contacts.service';\n\n@Component({\n  selector: 'app-new-contact',\n  templateUrl: './new-contact.component.html',\n  styleUrls: ['./new-contact.component.css']\n})\nexport class NewContactComponent implements OnInit {\n\n  constructor(public contactsService: ContactsService ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<input id=\"contact-name\"  type=\"text\" placeholder=\"insert contact name / Ime i prezime korisnika\" (keyup.enter)=\"this.contactsService.addContact(contactName.value, contactPhone.value)\" #contactName/>\n<input id=\"contact-number\" onkeypress='return event.charCode > 47 && event.charCode <= 57' type=\"text\" placeholder=\"insert phone / Broj telefona\" (keyup.enter)=\"this.contactsService.addContact(contactName.value, contactPhone.value)\" #contactPhone/>\n\n<span id=\"add-btn\" (click)=\"this.contactsService.addContact(contactName.value, contactPhone.value)\">Add new contact / Unesi korisnika</span>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-phone-directory',\n  templateUrl: './phone-directory.component.html',\n  styleUrls: ['./phone-directory.component.css']\n})\nexport class PhoneDirectoryComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div id=\"phone-directory\">\n  <div id=\"all-contacts\" class=\"contacts-container\">\n    <div id=\"all-contacts-container\">\n      <span class=\"no-contacts\">No Contacts</span>\n      <app-all-contacts></app-all-contacts>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport Directory from '../model/Directory';\nimport DirectoryItem from '../model/DirectoryItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactsService {\n\n  directory: Directory\n  constructor() {\n    this.directory = new Directory;\n  }\n\n  addContact(contactName, contactPhone){\n    let contact = new DirectoryItem(contactName, contactPhone, new Date());\n    this.directory.add(contact);\n  }\n  deleteContact(contact){\n    this.directory.delete(contact);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}